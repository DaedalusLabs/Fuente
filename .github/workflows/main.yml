name: Rust

on:
  push:
    branches: [ "mera", "dev" ]
  pull_request:
    branches: [ "mera", "dev" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:

    strategy:
      matrix:
        project: ['admin', 'business', 'consumer', 'driver']
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js and Install Tailwind
      run: |
        npm install -D tailwindcss @tailwindcss/forms @tailwindcss/typography

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Setup Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Cache Rust dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cargo
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-cargo-

    - name: Install cargo-binstall
      uses: cargo-bins/cargo-binstall@v1.10.0

    - name: Install Trunk Binary 
      run: cargo binstall trunk --no-confirm
      
    - name: Install WASM toolchain
      run: rustup target add wasm32-unknown-unknown

    - name: Run security scan
      run: |
        echo "Running cargo audit..."
        cargo install cargo-audit
        cargo audit
        echo "Running npm audit..."
        npm audit

    - name: Build ${{ matrix.project }}
      run: |
        echo "--------- Stepping into ${{ matrix.project }}"
        cd ${{ matrix.project }}
        pwd
        echo "--------- tailwindcss"
        npx tailwindcss -i ./public/styles/input.css -o ./public/styles/output.css -c ../tailwind.config.cjs
        echo "---------"
        trunk build

    # Add artifacts upload
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.project }}-dist
        path: ${{ matrix.project }}/dist
