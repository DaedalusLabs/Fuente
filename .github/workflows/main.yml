name: Rust

on:
  push:
    branches: [ "mera", "dev" ]
  pull_request:
    branches: [ "mera", "dev" ]

# Add permissions configuration
permissions:
  contents: write
  pages: write
  id-token: write

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        project: ['admin', 'business', 'consumer', 'driver']
      fail-fast: false
    
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js environment
      uses: actions/setup-node@v4.1.0
    
    - name: Install tailwind
      run: npm install -D tailwindcss
    
    - name: Install tailwind deps (Forms)
      run: npm install -D @tailwindcss/forms
    
    - name: Install tailwind deps (Typography)
      run: npm install -D @tailwindcss/typography
    
    - name: Install cargo-binstall
      uses: cargo-bins/cargo-binstall@v1.10.0
    
    - name: Install Trunk Binary
      run: cargo binstall trunk --no-confirm
    
    - name: Install WASM toolchain
      run: rustup target add wasm32-unknown-unknown
    
    - name: Build ${{ matrix.project }}
      run: |
        echo "---------"
        cd ${{ matrix.project }}
        pwd
        echo "--------- tailwindcss"
        npx tailwindcss -i ./public/styles/input.css -o ./public/styles/output.css -c ../tailwind.config.cjs
        echo "--------- find"
        find .
        echo "---------ls -l /home/runner/work/fuente/fuente/${{ matrix.project }}/./public/styles/output.css"
        ls -l /home/runner/work/fuente/fuente/${{ matrix.project }}/./public/styles/output.css
        echo "---------"
        trunk build
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.project }}-dist
        path: ${{ matrix.project }}/dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: combined-dist
    
    - name: Prepare combined distribution
      run: |
        # Move each project's dist contents to its own subdirectory in public
        for project in admin business consumer driver; do
          mkdir -p public/$project
          mv combined-dist/$project-dist/* public/$project/
        done
    
    - name: Deploy to GitHub Pages
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./public
        keep_files: true
        commit_message: Deploy ${{ github.sha }} to gh-pages