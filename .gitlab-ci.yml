stages:
  - build
  - deploy

cache:
  key: ${CI_COMMIT_REF_SLUG}  # Cache key based on the branch name
  paths:
    - target/

# Build stage
build_invoicer:
  stage: build
  image: rust:latest  # Use the official Rust Docker image
  script:
    - cargo build --package fuente-invoicer --release  # Build the binaries in release mode
  artifacts:
    paths:
      - target/release/fuente-invoicer  # Save the compiled binaries
    expire_in: 1 week  # Optional: Set an expiration time for the artifacts

# Deploy stage
deploy_invoicer:
  stage: deploy
  before_script:
    - apt-get -q update && apt-get -q install -y openssh-client rsync
    - eval $(ssh-agent -s)
    - mkdir -p ~/.ssh
    - touch ~/.ssh/config
    - cp /runner/.ssh/* ~/.ssh/
    - chmod -R 400 ~/.ssh
    - ssh-add ~/.ssh/gitlab-deploy
    - '[[ -f /.dockerinit ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'
  script:
    - ls target/release/  # List the binaries to verify they are available
    - rsync -avz --rsync-path="sudo rsync" target/release/fuente-invoicer "$DAEDALUS_APPS_HOST:$DEPLOY_PATH/fuente-invoicer"
    - rsync -avz --rsync-path="sudo rsync" docker-compose.yml "$DAEDALUS_APPS_HOST:$DEPLOY_PATH/docker-compose.yml"
    - rsync -avz --rsync-path="sudo rsync" Dockerfile "$DAEDALUS_APPS_HOST:$DEPLOY_PATH/Dockerfile"
    - ssh -o StrictHostKeyChecking=no "$DAEDALUS_APPS_HOST" "cd \"$DEPLOY_PATH\" && docker-compose down && docker-compose up -d"
  dependencies:
    - build_invoicer # Explicitly depend on the build stage artifacts
  when: manual